How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It made see my mistakes easily

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    It will help me deliver error free code in record time
    * You can save time for retrieving older version of your code when you notice you have a bug in the newer version.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pros- manaully commiting a projecthelps yo save meaningful versions of your work. cons-compared to automatically saving your file, there is a tendency for manual commits to be forgotten, msing commits larger
    Pros:
* You can commit whenever you want.
* Granularity is at committer's disposal.

Cons:
* You may forget to commit when you should do it.
* It can be actually too late when you notice you should have made a commit.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    some vcs allows multiple change on files to ease editing of codes while others by design allow seperate changes
    * Git is more programming oriented, where several files tend to consist one logical group. On the other hand, Google Docs is primarily more targeted for documents created for human readings, in which case each single file consists a meaningful piece.

How can you use the commands git log and git diff to view the history of files?

    git log enables me to see the history of commits on a file while git diff enables me to compare between two versions
    * git log can be used to list the summaries of all the changes made to the repository.
    * git diff can be used to see what has actually changed between two given commits.

How might using version control make you more confident to make changes that
could break something?

    version control use fosters confidence becuase you can always go back to check a previous versionof your project before a major change
    * You can try changing any critical features, since you can always revert back to the point when those were working correctly. If you find something is not working, you can git log, and try the previous versions untill you find the one which works, and make diff of the last one that worked correctly and the commit following it. That result would show where and how the bug was introduced.

Now that you have your workspace set up, what do you want to try using Git for?

    To faciliate my coding experience
